name: CI/CD

on:
  push:
    branches: [ $default-branch, dev ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  ci:
    runs-on: ubuntu-latest
    environment: test

    env:
      TOKEN_EXPIRATION_IN_SEC: ${{ vars.TOKEN_EXPIRATION_IN_SEC }}
      OPENAI: ${{ secrets.OPENAI }}
      SECRET: ${{ secrets.SECRET }}

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
    
    - name: Run Linter / Formatter
      run: npm run lint

    - name: Run unit tests
      run: npm run test

    - name: Run coverage
      run: npm run coverage

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    environment: dev

    env:
      MONGODB_URL: ${{ secrets.MONGODB_URL }}
      OPENAI: ${{ secrets.OPENAI }}
      SECRET: ${{ secrets.SECRET }}
      AUTO_INDEX: ${{ vars.AUTO_INDEX }}
      FRONTEND_ORIGIN: ${{ vars.FRONTEND_ORIGIN }}
      PORT: ${{ vars.PORT }}
      REDIS_HOST: ${{ vars.REDIS_HOST }}
      TOKEN_EXPIRATION_IN_SEC: ${{ vars.TOKEN_EXPIRATION_IN_SEC }}

    needs: ci
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with: 
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: Copy necessary files to the VM
        run: scp -o StrictHostKeyChecking=no -r src docker-compose_dev.yml package-lock.json Dockerfile root@${{ secrets.DO_HOST }}:~/fursona

      - name: Deploy to Dev Server
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DO_HOST }} << 'EOF'
            cd fursona
            docker compose down
            docker compose up -f docker-compose_dev.yml -d --build
          EOF
